{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rheider\\\\projetos\\\\ignite-aulas\\\\02-firstapp\\\\rmoney\\\\src\\\\TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider({\n  children\n}) {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get(\"transactions\").then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transaction) {\n    await api.post(\"/transactions\", transaction);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["C:/Users/Rheider/projetos/ignite-aulas/02-firstapp/rmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAsBA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAC9C,EAD8C,CAAzC;AAIP,OAAO,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAuE;AAAA;;AAC5E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CACAM,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAcH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CAFrC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeM,iBAAf,CAAiCC,WAAjC,EAAgE;AAC9D,UAAMX,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0BD,WAA1B,CAAN;AACD;;AAED,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEP,MAAAA,YAAF;AAAgBM,MAAAA;AAAhB,KAArC;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { api } from \"./services/api\";\r\n\r\ninterface Transaction {\r\n  id: number;\r\n  title: string;\r\n  amount: number;\r\n  type: string;\r\n  category: string;\r\n  createdAt: string;\r\n}\r\n\r\ntype TransactionInput = Omit<Transaction, \"id\" | \"createdAt\">;\r\n\r\ninterface TransactionsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface TransactionsContextData {\r\n  transactions: Transaction[];\r\n  createTransaction: (transaction: TransactionInput) => void;\r\n}\r\n\r\nexport const TransactionsContext = createContext<TransactionsContextData>(\r\n  {} as TransactionsContextData\r\n);\r\n\r\nexport function TransactionsProvider({ children }: TransactionsProviderProps) {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"transactions\")\r\n      .then((response) => setTransactions(response.data.transactions));\r\n  }, []);\r\n\r\n  async function createTransaction(transaction: TransactionInput) {\r\n    await api.post(\"/transactions\", transaction);\r\n  }\r\n\r\n  return (\r\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\r\n      {children}\r\n    </TransactionsContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}